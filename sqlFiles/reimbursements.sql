DROP TABLE ALLEMPLOYEES;

DROP TABLE REIMBURSEMENTS

CREATE TABLE ALLEMPLOYEES(
	EMPLOYEEID NUMBER(10) PRIMARY KEY,
	EMPLOYEETYPE varchar2(255) NOT NULL check(LENGTH(EMPLOYEETYPE) > 1),
	FIRSTNAME varchar2(255) NOT NULL check(LENGTH(FIRSTNAME) > 1),
	LASTNAME varchar2(255) NOT NULL check(LENGTH(LASTNAME) > 1),
	EMAIL varchar2(255) NOT NULL check(LENGTH(EMAIL) > 1),
	PASSWORD varchar2(255) NOT NULL check(LENGTH(PASSWORD) > 1),
	ADDRESS varchar2(255) NOT NULL check(LENGTH(ADDRESS) > 1),
	STARTDATE varchar2(255) NOT NULL check(LENGTH(STARTDATE) > 1),
	STATUS varchar2(255) NOT NULL check(LENGTH(STATUS) > 1)
);

CREATE TABLE REIMBURSEMENTS(
	REQUESTID NUMBER(10) PRIMARY KEY,
	AMOUNT DECIMAL(38, 2) NOT NULL,
	PURPOSE varchar2(255) NOT NULL check(LENGTH(PURPOSE) > 1),
	SUBMITTEDDATE varchar2(255) NOT NULL check(LENGTH(SUBMITTEDDATE) > 1),
	STATUS varchar2(255) NOT NULL check(LENGTH(STATUS) > 1),
	EMPLOYEE_ID NUMBER(10) NOT NULL,
	CONSTRAINT REQUEST_ALLEMPLOYEES FOREIGN KEY (EMPLOYEE_ID)
		REFERENCES ALLEMPLOYEES (EMPLOYEEID) ON DELETE CASCADE
);

SELECT * FROM REIMBURSEMENTS;

SELECT * FROM ALLEMPLOYEES;

CREATE SEQUENCE emps_seq
	START WITH 1
	INCREMENT BY 1;

CREATE OR REPLACE TRIGGER emps_seq_trigger
BEFORE INSERT ON ALLEMPLOYEES
FOR EACH ROW
BEGIN
	IF : NEW.EMPLOYEEID IS NULL THEN
	SELECT emps_seq.nextval INTO : NEW.EMPLOYEEID FROM dual;
	END IF;
END;

CREATE SEQUENCE re_seq
	START WITH 1
	INCREMENT BY 1;


CREATE OR REPLACE TRIGGER re_seq_trigger
BEFORE INSERT ON REIMBURSEMENTS
FOR EACH ROW
BEGIN
	IF : NEW.REQUESTID IS NULL THEN
	SELECT re_seq.nextval INTO : NEW.REQUESTID FROM dual;
	END IF;
END;

CREATE OR REPLACE PROCEDURE create_employee(EMPLOYEEID OUT NUMBER, EMPLOYEETYPE IN varchar2, FIRSTNAME IN varchar2, LASTNAME IN varchar2, EMAIL IN varchar2, PASSWORD IN varchar2, ADDRESS IN varchar2, STARTDATE IN varchar2,STATUS IN varchar2)
IS
BEGIN
   INSERT INTO ALLEMPLOYEES (EMPLOYEEID, EMPLOYEETYPE, FIRSTNAME, LASTNAME, EMAIL, PASSWORD, ADDRESS, STARTDATE, STATUS) VALUES (emps_seq.nextval, EMPLOYEETYPE, FIRSTNAME, LASTNAME, EMAIL, PASSWORD, ADDRESS, STARTDATE, STATUS);
   EMPLOYEEID := emps_seq.currval;
  COMMIT;
END;

CREATE OR REPLACE PROCEDURE create_request(REQUESTID OUT NUMBER, AMOUNT IN DECIMAL, PURPOSE IN varchar2, SUBMITTEDDATE IN varchar2, STATUS IN varchar2, EMPLOYEE_ID_ID IN NUMBER)
IS
BEGIN
   INSERT INTO REIMBURSEMENTS (REQUESTID, AMOUNT, PURPOSE, SUBMITTEDDATE, STATUS, EMPLOYEE_ID) VALUES (re_seq.nextval, AMOUNT, PURPOSE, SUBMITTEDDATE, STATUS, EMPLOYEE_ID);
   REQUESTID := re_seq.currval;
   COMMIT;
END;